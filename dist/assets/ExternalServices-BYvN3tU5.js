function s(a){if(a.ok)return a.json();throw new Error("Bad Response")}class i{constructor(t=!1){this.mockMode=t}async getData(t){if(this.mockMode){const e=await fetch(`/json/${t}.json`);return await s(e)}else{const e=await fetch(`undefinedproducts/search/${t}`);return(await s(e)).Result}}async findProductById(t){if(this.mockMode){const e=["tents","sleeping-bags","backpacks"];for(const o of e)try{const c=(await this.getData(o)).find(r=>r.Id===t);if(c)return c}catch(n){console.warn(`Could not load ${o}.json:`,n)}return null}else{const e=await fetch(`undefinedproduct/${t}`);return(await s(e)).Result}}async checkout(t){const e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return await fetch("undefinedcheckout/",e).then(s)}}export{i as E};
